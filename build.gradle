buildscript{
    ext {
        kotlin_version = '1.3.11'
        junit_version = '5.4.0'
        global_version = '1.0.2'
        slf4j_version = '1.7.26'
        jackson_version = '2.9.8'
        lettuce_version='5.1.5.RELEASE'
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlin_version}")
    }
}

allprojects {

    group 'com.labijie'
    version '1.0.0'

    apply plugin: 'kotlin'
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'signing'

    sourceCompatibility = 1.8


    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }


    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies{
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junit_version
    }
}

subprojects {
    task sourcesJar(type: Jar, dependsOn: classes) {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        classifier 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar) {
        classifier = "javadoc"
        from javadoc
    }

    artifacts {
        //archives jar
        archives sourcesJar
        archives javadocJar
    }

    signing {
        sign configurations.archives
    }
    //sign configurations.archives

    uploadArchives {
        if (!project.name.startsWith("dummy")) {

            System.out.println("deployer --->" + project.name)


            repositories {
                mavenDeployer {
                    repository(url: "file://" + System.properties['user.home'] + "/.m2/repository")
                    pom.project {
                        artifactId "labijie-caching-kt" + (project.name == "core" ? "" : "-" + project.name)
                        version project.rootProject.version
                    }
                }
                //gradle -Dmu="admin" -Dmp="password" uploadArchives
                def u = System.properties.getProperty("mu")
                def p = System.properties.getProperty("mp")

                if (u != null && p != null && !u.isEmpty() && !p.isEmpty()) {

                    System.out.println("maven deploy user: " + u)

                    mavenDeployer {

                        beforeDeployment { MavenDeployment deployment ->
                            System.out.println("sign: " + u)
                            signing.signPom(deployment)
                        }

                        pom.project {
                            name  project.name
                            description  'labijie caching library'
                            artifactId "labijie-caching-kotlin" + (project.name == "core" ? "" : "-" + project.name)
                            version project.rootProject.version
                            url 'https://github.com/endink/caching-kotlin'
                            licenses {
                                license {
                                    name 'The Apache Software License, Version 2.0'
                                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                                    distribution 'labijie.com'
                                }
                            }
                            scm {
                                url 'scm:git@github.com:endink/caching.git'
                                connection 'scm:git@github.com:endink/caching.git'
                                developerConnection 'git@github.com:endink/caching.git'
                            }

                            developers {
                                developer {
                                    id 'labijie.com'
                                    name 'AndersXiao'
                                    email 'sharping@outlook.com'
                                }
                            }
                        }

                        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                            authentication(userName: u, password: p)
                        }

                        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                            authentication(userName: u, password: p)
                        }
                    }
                }
            }
        }
    }
}